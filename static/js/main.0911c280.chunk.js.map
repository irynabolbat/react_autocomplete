{"version":3,"sources":["components/PeopleList/PeopleList.tsx","data/people.ts","components/Dropdown/Autocomplete.tsx","App.tsx","index.tsx"],"names":["PeopleList","React","memo","people","onSelectPerson","onQuery","map","person","className","href","sex","onClick","event","preventDefault","name","handlePersonClick","slug","peopleFromServer","born","died","fatherName","motherName","Autocomplete","delay","allPeople","useState","selectedPerson","setSelectedPerson","query","setQuery","applyQuery","setApplyQuery","filteredPeople","useMemo","filter","toLowerCase","includes","trim","applySearch","useCallback","debounce","handleSelectPerson","classNames","type","value","placeholder","onChange","target","role","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0911c280.chunk.js","sourcesContent":["import React from 'react';\nimport { Person } from '../../types/Person';\n\ntype Prop = {\n  people: Person[],\n  onSelectPerson?: (person: Person) => void,\n  onQuery?: (query: string) => void,\n};\n\nexport const PeopleList:React.FC<Prop> = React.memo(({\n  people,\n  onSelectPerson = () => {},\n  onQuery = () => {},\n}) => {\n  const handlePersonClick = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n    person: Person,\n  ) => {\n    event.preventDefault();\n    onSelectPerson(person);\n    onQuery(person.name);\n  };\n\n  return (\n    <>\n      {people.map((person: Person) => (\n        <div\n          className=\"dropdown-item\"\n          key={person.slug}\n        >\n          <a\n            href=\"/\"\n            className={person.sex === 'f' ? 'has-text-danger' : 'has-text-link'}\n            onClick={(event) => handlePersonClick(event, person)}\n          >\n            {person.name}\n          </a>\n        </div>\n      ))}\n    </>\n  );\n});\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import { useCallback, useMemo, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport classNames from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PeopleList } from '../PeopleList/PeopleList';\nimport { peopleFromServer } from '../../data/people';\n\ntype Prop = {\n  delay: number,\n};\n\nexport const Autocomplete: React.FC<Prop> = ({\n  delay,\n}) => {\n  const allPeople: Person[] = peopleFromServer;\n\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [applyQuery, setApplyQuery] = useState<string>('');\n\n  const filteredPeople = useMemo(() => allPeople.filter(\n    person => person.name.toLowerCase().includes(query.toLowerCase().trim()),\n  ), [applyQuery, allPeople]);\n\n  const applySearch = useCallback(\n    debounce(setApplyQuery, delay),\n    [delay],\n  );\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applySearch(event.target.value);\n  };\n\n  const handleSelectPerson = useCallback((person: Person) => {\n    setQuery('');\n    setSelectedPerson(person);\n  }, []);\n\n  return (\n    <main className=\"section\">\n      {selectedPerson ? (\n        <h1\n          className={classNames('title', {\n            'has-text-danger': selectedPerson?.sex === 'f',\n            'has-text-link': selectedPerson?.sex === 'm',\n          })}\n        >\n          {`${selectedPerson?.name} (${selectedPerson?.born} - ${selectedPerson?.died})`}\n        </h1>\n      ) : (\n        <h1 className=\"title\">\n          No selected person\n        </h1>\n      )}\n\n      <div className=\"dropdown is-active\">\n        <div className=\"dropdown-trigger\">\n          <input\n            type=\"text\"\n            value={query}\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            onChange={handleInputChange}\n          />\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={() => setQuery('')}\n        >\n          X\n        </button>\n\n        {(query && query === applyQuery) && (\n          <div className=\"dropdown-menu\" role=\"menu\">\n            <div className=\"dropdown-content\">\n              {filteredPeople.length === 0 ? (\n                <p>No matching suggestions</p>\n              ) : (\n                <PeopleList\n                  people={filteredPeople}\n                  onSelectPerson={handleSelectPerson}\n                  onQuery={setQuery}\n                />\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </main>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Autocomplete } from './components/Dropdown/Autocomplete';\n\nconst DELAY = 1000;\n\nexport const App: React.FC = () => {\n  return (\n    <Autocomplete delay={DELAY} />\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}